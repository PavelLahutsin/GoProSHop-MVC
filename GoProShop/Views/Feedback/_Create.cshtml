@model GoProShop.ViewModels.FeedbackVM

    @using (Html.BeginForm("Create", "Feedback", FormMethod.Post, new { id = "create-feedback-form" }))
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-md-6">
                @if (ViewBag.ProductId != null)
                {
                    @Html.Hidden("productId", (int)ViewBag.ProductId)
                }

                <input type="hidden" name="rating" id="Rating" />
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Имя" } })
                @Html.ValidationMessageFor(model => model.Name, null, new { @class = "text-danger"})
                @Html.EditorFor(model => model.SurName, new { htmlAttributes = new { @class = "form-control", placeholder = "Фамилия" } })
                @Html.ValidationMessageFor(model => model.SurName, null, new { @class = "text-danger" })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email" } })
                @Html.ValidationMessageFor(model => model.Email, null, new { @class = "text-danger" })
                <button type="submit" id="submit-feedback" class="btn btn-primary">
                    <i class="fa fa-spinner fa-pulse fa-lg fa-fw"></i> Отправить
                </button>
            </div>
            <div class="col-md-6">
                <div class="form-inline" style="height: 20px; margin-top: 8px; margin-bottom: 8px;" onmouseout="CRateSelected()">
                    <text style="margin-right: 7px;">Оцените нашу работу:</text>
                    @for (var i = 1; i < 6; i++)
                    {
                        <i class="fa fa-star-o fa-lg" id="Rate@(i)" onclick="CRate(@i)" onmouseover="CRateOver(@i)" onmouseout="CRateOut(@i)"></i>
                    }
                </div>
                @Html.ValidationMessageFor(model => model.Rating, null, new { @class = "text-danger" })
                @Html.TextAreaFor(model => model.Message, new { @class = "form-control", style = "overflow-x: hidden;", rows = 8, placeholder = "Сообщение" })
                @Html.ValidationMessageFor(model => model.Message, null, new { @class = "text-danger" })
            </div>
        </div>
    }
<script>
    $('#create-feedback-form').submit(function (event) {
        event.preventDefault();

        var formdata = new FormData($(this).get(0));
        var button = $(this).find('button[type="submit"]');
        var spinner = button.find('.fa-spinner');

        spinner.css("display", "inline-block");
        button.addClass("disabled");

        $.ajax({
            url: this.action,
            type: this.method,
            data: formdata,
            processData: false,
            contentType: false,
            success: function (result) {
                if (result.IsSuccess) {
                    updateNotificationMessage(".table-notification-message", result);
                    spinner.hide();
                    button.removeClass("disabled");
                    $('#create-feedback-content').load("/Feedback/Create");
                }
                else {
                    spinner.hide();
                    button.removeClass("disabled");
                    $('#create-feedback-content').html(result);
                }
            }
        });
    });
</script>