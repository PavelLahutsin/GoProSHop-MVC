@model  PagedList.IPagedList<GoProShop.ViewModels.OrderVM>

@using PagedList.Mvc;
@using GoProShop.Helpers;

@{
    var options = new AjaxOptions()
    {
        HttpMethod = "GET",
        InsertionMode = InsertionMode.Replace,
        UpdateTargetId = "admin-orders"
    };
}
<table class="table table-responsive">
    <thead>
        <tr>
            <th class="text-center">
                @Html.Label("#")
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].OrderDate)
            </th>

            <th>
                @Html.DisplayNameFor(model => model[0].Customer.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Customer.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Customer.Phone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Condition)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].DeliveryType)
            </th>
            <th class="text-center">Действия</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
            {
            <tr>
                <td>
                    @item.Id
                </td>
                <td width="150">
                    <a class="pull-left" href="@Url.Action("Edit","Feedback", new { id = item.Id })" onclick="editOrder(event, this,@item.Id)">
                      <span class="fa fa-clock-o"></span> @item.OrderDate.ToString("dd MMMM yyyy")
                    </a>
                    @if (!item.IsViewed)
                    {
                        <span class="label label-info pull-right label-new-entity">new</span>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Customer.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Customer.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Customer.Phone)
                </td>
                <td>
                    <span class="label @(item.Condition == GoProShop.Enums.Condition.Awaiting ? "label-warning" : "label-success")">@Html.EnumDisplayNameFor(item.Condition)</span>
                </td>
                <td>
                    @Html.EnumDisplayNameFor(item.DeliveryType)
                </td>
                <td width="150" class="text-center">
                    <a class="btn btn-default btn-sm" data-is-viewed="@item.IsViewed" onclick="editOrder(event, this,@item.Id)" href="@Url.Action("Edit", "Order", new { id = item.Id })"><i class="fa fa-spinner fa-pulse fa-fw"></i><span class="fa fa-pencil-square-o icon-button"></span> </a>
                    <a class="btn btn-default btn-sm" data-is-viewed="@item.IsViewed" onclick="deleteOrder(event, this, @item.Id)" href="@Url.Action("Delete", "Order", new { id = item.Id })"><span class="fa fa-trash-o text-danger"></span> </a>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (Model?.TotalItemCount > 9)
{
    <div class="row">
        <div class="col-md-12">
            @Html.PagedListPager(Model, page => Url.Action("GetAdminOrders", "Order", new { page }),
PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(options))
        </div>
    </div>
}

<script>
    $('.condition-dropdown').change(function (e) {
        var dropdown = $(this);
        var parentRow = dropdown.closest("tr");

        if (dropdown.val() === "1") {
            parentRow.switchClass("table-row-success", "table-row-warning", 300);
        }
        else if (dropdown.val() === "2") {
            parentRow.switchClass("table-row-warning", "table-row-success", 300);
        }
    });
</script>